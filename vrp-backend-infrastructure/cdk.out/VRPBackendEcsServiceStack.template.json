{
 "Resources": {
  "VRPBackendFargateServiceLB527E1B78": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "VRPBackendFargateServiceLBSecurityGroup379A95EA",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputRefVRPBackendVPCPublicSubnet1SubnetFF176F3E850C58ED"
     },
     {
      "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputRefVRPBackendVPCPublicSubnet2Subnet8CF671C6CBD073DE"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/LB/Resource"
   }
  },
  "VRPBackendFargateServiceLBSecurityGroup379A95EA": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB VRPBackendEcsServiceStackVRPBackendFargateServiceLB37DF05B3",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputRefVRPBackendVPC60C6D0EE92200239"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/LB/SecurityGroup/Resource"
   }
  },
  "VRPBackendFargateServiceLBSecurityGrouptoVRPBackendEcsServiceStackVRPBackendFargateServiceSecurityGroup8B1E002080B41014E2": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "VRPBackendFargateServiceSecurityGroup2259DAE6",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "VRPBackendFargateServiceLBSecurityGroup379A95EA",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/LB/SecurityGroup/to VRPBackendEcsServiceStackVRPBackendFargateServiceSecurityGroup8B1E0020:80"
   }
  },
  "VRPBackendFargateServiceLBPublicListenerD5357440": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "VRPBackendFargateServiceLBPublicListenerECSGroup67273753"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "VRPBackendFargateServiceLB527E1B78"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/LB/PublicListener/Resource"
   }
  },
  "VRPBackendFargateServiceLBPublicListenerECSGroup67273753": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckPath": "/",
    "Matcher": {
     "HttpCode": "200-399"
    },
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputRefVRPBackendVPC60C6D0EE92200239"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "VRPBackendFargateServiceTaskDefTaskRole0D13EE8D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/TaskDef/TaskRole/Resource"
   }
  },
  "VRPBackendFargateServiceTaskDefTaskRoleDefaultPolicyDC3CEB10": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputFnGetAttVRPDataTable3E5097EDArn9B713839"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputFnGetAttVRPSolutionsBucket21695A78Arn9EC44865"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputFnGetAttVRPSolutionsBucket21695A78Arn9EC44865"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "VRPBackendFargateServiceTaskDefTaskRoleDefaultPolicyDC3CEB10",
    "Roles": [
     {
      "Ref": "VRPBackendFargateServiceTaskDefTaskRole0D13EE8D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/TaskDef/TaskRole/DefaultPolicy/Resource"
   }
  },
  "VRPBackendFargateServiceTaskDef9EC6EC0B": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "VRP_DATA_TABLE",
        "Value": {
         "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputRefVRPDataTable3E5097EDBDCB015C"
        }
       },
       {
        "Name": "VRP_SOLUTIONS_BUCKET",
        "Value": {
         "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputRefVRPSolutionsBucket21695A78557379F5"
        }
       }
      ],
      "Essential": true,
      "Image": "public.ecr.aws/nginx/nginx:latest",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "VRPBackendFargateServiceTaskDefvrpbackendcontainerLogGroup3B6CB1DB"
        },
        "awslogs-stream-prefix": "VRPBackendFargateService",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "vrp-backend-container",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "VRPBackendFargateServiceTaskDefExecutionRole8F79EEFB",
      "Arn"
     ]
    },
    "Family": "VRPBackendEcsServiceStackVRPBackendFargateServiceTaskDef85937891",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "VRPBackendFargateServiceTaskDefTaskRole0D13EE8D",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/TaskDef/Resource"
   }
  },
  "VRPBackendFargateServiceTaskDefvrpbackendcontainerLogGroup3B6CB1DB": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/TaskDef/vrp-backend-container/LogGroup/Resource"
   }
  },
  "VRPBackendFargateServiceTaskDefExecutionRole8F79EEFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/TaskDef/ExecutionRole/Resource"
   }
  },
  "VRPBackendFargateServiceTaskDefExecutionRoleDefaultPolicy955AF0A5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "VRPBackendFargateServiceTaskDefvrpbackendcontainerLogGroup3B6CB1DB",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "VRPBackendFargateServiceTaskDefExecutionRoleDefaultPolicy955AF0A5",
    "Roles": [
     {
      "Ref": "VRPBackendFargateServiceTaskDefExecutionRole8F79EEFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/TaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "VRPBackendFargateService1F47BB8A": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputRefVRPBackendCluster2C6BD971E20D368B"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "vrp-backend-container",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "VRPBackendFargateServiceLBPublicListenerECSGroup67273753"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "VRPBackendFargateServiceSecurityGroup2259DAE6",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputRefVRPBackendVPCPrivateSubnet1Subnet8C465972DAE9255F"
       },
       {
        "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputRefVRPBackendVPCPrivateSubnet2Subnet5AAFB2AF7F3BB99B"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "VRPBackendFargateServiceTaskDef9EC6EC0B"
    }
   },
   "DependsOn": [
    "VRPBackendFargateServiceLBPublicListenerECSGroup67273753",
    "VRPBackendFargateServiceLBPublicListenerD5357440",
    "VRPBackendFargateServiceTaskDefTaskRoleDefaultPolicyDC3CEB10",
    "VRPBackendFargateServiceTaskDefTaskRole0D13EE8D"
   ],
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/Service/Service"
   }
  },
  "VRPBackendFargateServiceSecurityGroup2259DAE6": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "VRPBackendEcsServiceStack/VRPBackendFargateService/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputRefVRPBackendVPC60C6D0EE92200239"
    }
   },
   "DependsOn": [
    "VRPBackendFargateServiceTaskDefTaskRoleDefaultPolicyDC3CEB10",
    "VRPBackendFargateServiceTaskDefTaskRole0D13EE8D"
   ],
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/Service/SecurityGroup/Resource"
   }
  },
  "VRPBackendFargateServiceSecurityGroupfromVRPBackendEcsServiceStackVRPBackendFargateServiceLBSecurityGroup8CEE28B9802F214199": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "VRPBackendFargateServiceSecurityGroup2259DAE6",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "VRPBackendFargateServiceLBSecurityGroup379A95EA",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "DependsOn": [
    "VRPBackendFargateServiceTaskDefTaskRoleDefaultPolicyDC3CEB10",
    "VRPBackendFargateServiceTaskDefTaskRole0D13EE8D"
   ],
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/Service/SecurityGroup/from VRPBackendEcsServiceStackVRPBackendFargateServiceLBSecurityGroup8CEE28B9:80"
   }
  },
  "VRPBackendFargateServiceTaskCountTargetBD28B261": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 2,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/",
       {
        "Fn::ImportValue": "VRPBackendCoreInfrastructureStack:ExportsOutputRefVRPBackendCluster2C6BD971E20D368B"
       },
       "/",
       {
        "Fn::GetAtt": [
         "VRPBackendFargateService1F47BB8A",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "DependsOn": [
    "VRPBackendFargateServiceTaskDefTaskRoleDefaultPolicyDC3CEB10",
    "VRPBackendFargateServiceTaskDefTaskRole0D13EE8D"
   ],
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/Service/TaskCount/Target/Resource"
   }
  },
  "VRPBackendFargateServiceTaskCountTargetCpuScalingB6F27914": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "VRPBackendEcsServiceStackVRPBackendFargateServiceTaskCountTargetCpuScaling9E5C325D",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "VRPBackendFargateServiceTaskCountTargetBD28B261"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "ScaleInCooldown": 60,
     "ScaleOutCooldown": 60,
     "TargetValue": 70
    }
   },
   "DependsOn": [
    "VRPBackendFargateServiceTaskDefTaskRoleDefaultPolicyDC3CEB10",
    "VRPBackendFargateServiceTaskDefTaskRole0D13EE8D"
   ],
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/VRPBackendFargateService/Service/TaskCount/Target/CpuScaling/Resource"
   }
  },
  "Http5xxAlarm2F844FC7": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmDescription": "HTTP 5xx errors > 10",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "LoadBalancer",
      "Value": {
       "Fn::GetAtt": [
        "VRPBackendFargateServiceLB527E1B78",
        "LoadBalancerFullName"
       ]
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "HTTPCode_Target_5XX_Count",
    "Namespace": "AWS/ApplicationELB",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 10
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/Http5xxAlarm/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31QXW/CMAz8LbyHbFRC2itjH5qEtInyjkzqZaYhqRIHhKL+96kpH2Wb9uTz5eKzr5CT6YO8H8EhjFVVjw1tZCoZVC3gENYJVVg3wIzeBjlrGkMKmJxdOKgewYBVWL2A18BYot+TQoEGApMyDqpNVpDV+0Kmv397Mf+87Yc6Coz2pDnjwfsKvEZ+9S42nWTQtgJVIVOJKnri40XyP/GsPYbwi36zme9mBplO564g1E/4SZa6TXr7W8ZZBrLoB9yPqLJRD0sFBjYmj527aLkVBDuZls5kXa4fzpA6dm2PWmGcDjItnL4cdMatgGtQENkFBYaslulq1cWVl7hl+rLyoGqyuuz/Xb1viFYo42J1AFZfMs0M+F2nyaBtO/geuYkslhhc9P3RQzx3tsrhtMK6CuU23O2LQk7lZLQNRGMfLdMO5bKv3/FQ7ZaxAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "VRPBackendFargateServiceLoadBalancerDNS77350889": {
   "Value": {
    "Fn::GetAtt": [
     "VRPBackendFargateServiceLB527E1B78",
     "DNSName"
    ]
   }
  },
  "VRPBackendFargateServiceServiceURL49420402": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "VRPBackendFargateServiceLB527E1B78",
        "DNSName"
       ]
      }
     ]
    ]
   }
  },
  "VRPBackendEcsServiceName": {
   "Description": "VRPBackend ECS Service Name",
   "Value": {
    "Fn::GetAtt": [
     "VRPBackendFargateService1F47BB8A",
     "Name"
    ]
   }
  },
  "VRPBackendLoadBalancerDNS": {
   "Description": "VRPBackend Load Balancer DNS Name",
   "Value": {
    "Fn::GetAtt": [
     "VRPBackendFargateServiceLB527E1B78",
     "DNSName"
    ]
   }
  },
  "ExportsOutputFnGetAttVRPBackendFargateService1F47BB8ANameD023DB5E": {
   "Value": {
    "Fn::GetAtt": [
     "VRPBackendFargateService1F47BB8A",
     "Name"
    ]
   },
   "Export": {
    "Name": "VRPBackendEcsServiceStack:ExportsOutputFnGetAttVRPBackendFargateService1F47BB8ANameD023DB5E"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}