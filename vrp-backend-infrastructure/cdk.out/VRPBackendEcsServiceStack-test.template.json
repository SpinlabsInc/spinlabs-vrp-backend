{
 "Resources": {
  "EcsTaskExecutionRoletestB45FE468": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/EcsTaskExecutionRole-test/Resource"
   }
  },
  "EcsTaskExecutionRoletestDefaultPolicyE7EE0F8E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputFnGetAttVRPBackendRepotest19E9342AArn3FD7CC48"
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "VRPBackendFargateServicetestTaskDefvrpbackendcontainertestLogGroupE0941B0A",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EcsTaskExecutionRoletestDefaultPolicyE7EE0F8E",
    "Roles": [
     {
      "Ref": "EcsTaskExecutionRoletestB45FE468"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/EcsTaskExecutionRole-test/DefaultPolicy/Resource"
   }
  },
  "EcsTaskRoletest28D55EFD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/EcsTaskRole-test/Resource"
   }
  },
  "EcsTaskRoletestDefaultPolicyF5B909DC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputFnGetAttVRPDataTabletest218F75A5Arn3CAC74A7"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputFnGetAttVRPSolutionsBuckettestD5B37E09Arn8F0A7AC3"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputFnGetAttVRPSolutionsBuckettestD5B37E09Arn8F0A7AC3"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EcsTaskRoletestDefaultPolicyF5B909DC",
    "Roles": [
     {
      "Ref": "EcsTaskRoletest28D55EFD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/EcsTaskRole-test/DefaultPolicy/Resource"
   }
  },
  "VRPBackendFargateServicetestLBD80E3205": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "VRPBackendFargateServicetestLBSecurityGroupF31EDFA7",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendVPCtestPublicSubnet1Subnet6B1CE0B5297F8B10"
     },
     {
      "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendVPCtestPublicSubnet2Subnet2FD688A8466C1F4E"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/LB/Resource"
   }
  },
  "VRPBackendFargateServicetestLBSecurityGroupF31EDFA7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB VRPBackendEcsServiceStacktestVRPBackendFargateServicetestLB207A0545",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendVPCtest9E9F27E1667DD117"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/LB/SecurityGroup/Resource"
   }
  },
  "VRPBackendFargateServicetestLBSecurityGrouptoVRPBackendEcsServiceStacktestVRPBackendFargateServicetestServiceSecurityGroup6AE5979E80292D1A26": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "VRPBackendFargateServicetestServiceSecurityGroup4A69B288",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "VRPBackendFargateServicetestLBSecurityGroupF31EDFA7",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/LB/SecurityGroup/to VRPBackendEcsServiceStacktestVRPBackendFargateServicetestServiceSecurityGroup6AE5979E:80"
   }
  },
  "VRPBackendFargateServicetestLBPublicListener9DAF4B59": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "VRPBackendFargateServicetestLBPublicListenerECSGroup5B873263"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "VRPBackendFargateServicetestLBD80E3205"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/LB/PublicListener/Resource"
   }
  },
  "VRPBackendFargateServicetestLBPublicListenerECSGroup5B873263": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckPath": "/api/health",
    "Matcher": {
     "HttpCode": "200-399"
    },
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendVPCtest9E9F27E1667DD117"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "VRPBackendFargateServicetestTaskDef70668E4D": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "VRP_DATA_TABLE",
        "Value": {
         "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPDataTabletest218F75A5E2278CC0"
        }
       },
       {
        "Name": "VRP_SOLUTIONS_BUCKET",
        "Value": {
         "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPSolutionsBuckettestD5B37E099206F16B"
        }
       },
       {
        "Name": "VRP_SOLVER_JOB_DEFINITION",
        "Value": "solver-job-definition-test"
       },
       {
        "Name": "VRP_SOLVER_JOB_QUEUE",
        "Value": "solver-job-queue-test"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputFnGetAttVRPBackendRepotest19E9342AArn3FD7CC48"
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputFnGetAttVRPBackendRepotest19E9342AArn3FD7CC48"
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendRepotest19E9342A1048FFAD"
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "VRPBackendFargateServicetestTaskDefvrpbackendcontainertestLogGroupE0941B0A"
        },
        "awslogs-stream-prefix": "VRPBackendFargateService-test",
        "awslogs-region": "us-east-1"
       }
      },
      "Name": "vrp-backend-container-test",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "EcsTaskExecutionRoletestB45FE468",
      "Arn"
     ]
    },
    "Family": "VRPBackendEcsServiceStacktestVRPBackendFargateServicetestTaskDef5EBDEFE4",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "EcsTaskRoletest28D55EFD",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/TaskDef/Resource"
   }
  },
  "VRPBackendFargateServicetestTaskDefvrpbackendcontainertestLogGroupE0941B0A": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/TaskDef/vrp-backend-container-test/LogGroup/Resource"
   }
  },
  "VRPBackendFargateServicetestServiceD6DE7674": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendClustertest29B32953A1217D45"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "vrp-backend-container-test",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "VRPBackendFargateServicetestLBPublicListenerECSGroup5B873263"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "VRPBackendFargateServicetestServiceSecurityGroup4A69B288",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendVPCtestPrivateSubnet1Subnet54DB19AFBAF81951"
       },
       {
        "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendVPCtestPrivateSubnet2SubnetACEDACAAE0F8365A"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "VRPBackendFargateServicetestTaskDef70668E4D"
    }
   },
   "DependsOn": [
    "EcsTaskRoletestDefaultPolicyF5B909DC",
    "EcsTaskRoletest28D55EFD",
    "VRPBackendFargateServicetestLBPublicListenerECSGroup5B873263",
    "VRPBackendFargateServicetestLBPublicListener9DAF4B59"
   ],
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/Service/Service"
   }
  },
  "VRPBackendFargateServicetestServiceSecurityGroup4A69B288": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendVPCtest9E9F27E1667DD117"
    }
   },
   "DependsOn": [
    "EcsTaskRoletestDefaultPolicyF5B909DC",
    "EcsTaskRoletest28D55EFD"
   ],
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/Service/SecurityGroup/Resource"
   }
  },
  "VRPBackendFargateServicetestServiceSecurityGroupfromVRPBackendEcsServiceStacktestVRPBackendFargateServicetestLBSecurityGroup8E40F46780F9174F0D": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "VRPBackendFargateServicetestServiceSecurityGroup4A69B288",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "VRPBackendFargateServicetestLBSecurityGroupF31EDFA7",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "DependsOn": [
    "EcsTaskRoletestDefaultPolicyF5B909DC",
    "EcsTaskRoletest28D55EFD"
   ],
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/Service/SecurityGroup/from VRPBackendEcsServiceStacktestVRPBackendFargateServicetestLBSecurityGroup8E40F467:80"
   }
  },
  "VRPBackendFargateServicetestServiceTaskCountTargetBFE10C44": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 2,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/",
       {
        "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendClustertest29B32953A1217D45"
       },
       "/",
       {
        "Fn::GetAtt": [
         "VRPBackendFargateServicetestServiceD6DE7674",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": "arn:aws:iam::448049814374:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "DependsOn": [
    "EcsTaskRoletestDefaultPolicyF5B909DC",
    "EcsTaskRoletest28D55EFD"
   ],
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/Service/TaskCount/Target/Resource"
   }
  },
  "VRPBackendFargateServicetestServiceTaskCountTargetCpuScalingtest40DE9851": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "VRPBackendEcsServiceStacktestVRPBackendFargateServicetestServiceTaskCountTargetCpuScalingtest54DB6204",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "VRPBackendFargateServicetestServiceTaskCountTargetBFE10C44"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "ScaleInCooldown": 60,
     "ScaleOutCooldown": 60,
     "TargetValue": 70
    }
   },
   "DependsOn": [
    "EcsTaskRoletestDefaultPolicyF5B909DC",
    "EcsTaskRoletest28D55EFD"
   ],
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/VRPBackendFargateService-test/Service/TaskCount/Target/CpuScaling-test/Resource"
   }
  },
  "Http5xxAlarmtest3C26F49B": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmDescription": "HTTP 5xx errors > 10 in test environment",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "LoadBalancer",
      "Value": {
       "Fn::GetAtt": [
        "VRPBackendFargateServicetestLBD80E3205",
        "LoadBalancerFullName"
       ]
      }
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "HTTPCode_Target_5XX_Count",
    "Namespace": "AWS/ApplicationELB",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 10
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/Http5xxAlarm-test/Resource"
   }
  },
  "BatchServiceRoletest0E14388A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "batch.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSBatchServiceRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/BatchServiceRole-test/Resource"
   }
  },
  "SolverSecurityGrouptest9FCE16C6": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for Solver Compute Environment in test environment",
    "GroupName": "solver-security-group-test",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendVPCtest9E9F27E1667DD117"
    }
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/SolverSecurityGroup-test/Resource"
   }
  },
  "SolverComputeEnvironmenttest": {
   "Type": "AWS::Batch::ComputeEnvironment",
   "Properties": {
    "ComputeEnvironmentName": "solver-compute-environment-test",
    "ComputeResources": {
     "MaxvCpus": 4,
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "SolverSecurityGrouptest9FCE16C6",
        "GroupId"
       ]
      }
     ],
     "Subnets": [
      {
       "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendVPCtestPublicSubnet1Subnet6B1CE0B5297F8B10"
      },
      {
       "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendVPCtestPublicSubnet2Subnet2FD688A8466C1F4E"
      }
     ],
     "Type": "FARGATE"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "BatchServiceRoletest0E14388A",
      "Arn"
     ]
    },
    "State": "ENABLED",
    "Type": "MANAGED"
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/SolverComputeEnvironment-test"
   }
  },
  "SolverJobDefinitiontest": {
   "Type": "AWS::Batch::JobDefinition",
   "Properties": {
    "ContainerProperties": {
     "Environment": [
      {
       "Name": "VRP_DATA_TABLE",
       "Value": {
        "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPDataTabletest218F75A5E2278CC0"
       }
      },
      {
       "Name": "VRP_SOLUTIONS_BUCKET",
       "Value": {
        "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPSolutionsBuckettestD5B37E099206F16B"
       }
      }
     ],
     "Image": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          4,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputFnGetAttVRPBackendRepotest19E9342AArn3FD7CC48"
            }
           ]
          }
         ]
        },
        ".dkr.ecr.",
        {
         "Fn::Select": [
          3,
          {
           "Fn::Split": [
            ":",
            {
             "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputFnGetAttVRPBackendRepotest19E9342AArn3FD7CC48"
            }
           ]
          }
         ]
        },
        ".",
        {
         "Ref": "AWS::URLSuffix"
        },
        "/",
        {
         "Fn::ImportValue": "VRPBackendCoreInfrastructureStack-test:ExportsOutputRefVRPBackendRepotest19E9342A1048FFAD"
        }
       ]
      ]
     },
     "Memory": 1024,
     "Vcpus": 1
    },
    "JobDefinitionName": "solver-job-definition-test",
    "Type": "container"
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/SolverJobDefinition-test"
   }
  },
  "SolverJobQueuetest": {
   "Type": "AWS::Batch::JobQueue",
   "Properties": {
    "ComputeEnvironmentOrder": [
     {
      "ComputeEnvironment": {
       "Ref": "SolverComputeEnvironmenttest"
      },
      "Order": 1
     }
    ],
    "JobQueueName": "solver-job-queue-test",
    "Priority": 1
   },
   "DependsOn": [
    "SolverComputeEnvironmenttest"
   ],
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/SolverJobQueue-test"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/32Sy07DMBBFv6V715AugC2Uh0CVgKb7auJMg1vHjvxIVUX5dyZOHwkgVh6f3PEdX2fGk5uEJxPYu6nId1MlM96kHsSOEVo3EkreLI1CNt/ouH4YJcWh2/ZVy1C4dQXeo9WO31cVUfDS6IWB/AEUaIH5M9gCPKZoaymQoQLnpVCkyKJC6qKe8ebvbtu5jfZDnXQe9VFzqgffV+SM/sWaUHWSwbabnDxTFMFKfzhL/gdPhUXnfuFXHXlMgzfH667A7R5xI7XsJuntx8RoD5ImHrAfUUWjvkwF3T9T8di5Cdq3TJmC7BamOA97qlsGlxAgeOOom2KmC5+P6aKIBmPSLytLfwE1pH3f5d1HoGX0iiHfgxdf9H4KbNlpYtGyrMcE5qasgscnXUtrdIk6Gr+ZbJwPgc+AAduWLdGZYPsE3oOn7vgPHmnLtMmRb91Vndzx5JZfT7ZOyqmlWGSJfNmv35YrFfbgAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "VRPBackendEcsServiceStack-test/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "VRPBackendFargateServicetestLoadBalancerDNS1B77FBB1": {
   "Value": {
    "Fn::GetAtt": [
     "VRPBackendFargateServicetestLBD80E3205",
     "DNSName"
    ]
   }
  },
  "VRPBackendFargateServicetestServiceURLD60A4891": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "VRPBackendFargateServicetestLBD80E3205",
        "DNSName"
       ]
      }
     ]
    ]
   }
  },
  "VRPBackendEcsServiceNametest": {
   "Description": "VRPBackend ECS Service Name for test environment",
   "Value": {
    "Fn::GetAtt": [
     "VRPBackendFargateServicetestServiceD6DE7674",
     "Name"
    ]
   }
  },
  "VRPBackendLoadBalancerDNStest": {
   "Description": "VRPBackend Load Balancer DNS Name for test environment",
   "Value": {
    "Fn::GetAtt": [
     "VRPBackendFargateServicetestLBD80E3205",
     "DNSName"
    ]
   }
  },
  "ExportsOutputFnGetAttVRPBackendFargateServicetestServiceD6DE7674Name479201EC": {
   "Value": {
    "Fn::GetAtt": [
     "VRPBackendFargateServicetestServiceD6DE7674",
     "Name"
    ]
   },
   "Export": {
    "Name": "VRPBackendEcsServiceStack-test:ExportsOutputFnGetAttVRPBackendFargateServicetestServiceD6DE7674Name479201EC"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}